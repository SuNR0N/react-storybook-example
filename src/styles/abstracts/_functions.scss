@function color($key) {
  @return map-get($colors, $key);
}

@function color-shade($key, $shade: 'base', $value: 1) {
  $color: color($key);
  $shade: map-get($color, $shade);
  
  @if $value < 0.7 {
    $value: 0.7;
  } @else if $value > 1.3 {
    $value: 1.3;
  }

  @if $value < 1 {
    $shade: lighten($shade, (100 - $value * 100));
  } @else if $value > 1 {
    $shade: darken($shade, ($value - 1) * 100);
  }
  
  @return $shade;
}

@function luminance($color) {
  $red: nth($linear-channel-values, red($color) + 1);
  $green: nth($linear-channel-values, green($color) + 1);
  $blue: nth($linear-channel-values, blue($color) + 1);

  @return .2126 * $red + .7152 * $green + .0722 * $blue;
}

@function contrast($back, $front) {
  $backLum: luminance($back) + .05;
  $foreLum: luminance($front) + .05;

  @return max($backLum, $foreLum) / min($backLum, $foreLum);
}

@function choose-contrast-color($color) {
  $lightContrast: contrast($color, white);
  $darkContrast: contrast($color, black);

  @if ($lightContrast > $darkContrast) {
    @return white;
  }
  @else {
    @return black;
  }
}